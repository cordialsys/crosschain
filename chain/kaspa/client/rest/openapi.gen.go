// Package rest provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package rest

import (
	"encoding/json"
)

// Defines values for EndpointsGetAddressTransactionsPreviousOutpointLookupMode.
const (
	EndpointsGetAddressTransactionsPreviousOutpointLookupModeFull  EndpointsGetAddressTransactionsPreviousOutpointLookupMode = "full"
	EndpointsGetAddressTransactionsPreviousOutpointLookupModeLight EndpointsGetAddressTransactionsPreviousOutpointLookupMode = "light"
	EndpointsGetAddressTransactionsPreviousOutpointLookupModeNo    EndpointsGetAddressTransactionsPreviousOutpointLookupMode = "no"
)

// Defines values for EndpointsGetTransactionsPreviousOutpointLookupMode.
const (
	EndpointsGetTransactionsPreviousOutpointLookupModeFull  EndpointsGetTransactionsPreviousOutpointLookupMode = "full"
	EndpointsGetTransactionsPreviousOutpointLookupModeLight EndpointsGetTransactionsPreviousOutpointLookupMode = "light"
	EndpointsGetTransactionsPreviousOutpointLookupModeNo    EndpointsGetTransactionsPreviousOutpointLookupMode = "no"
)

// Defines values for GetVirtualChainTransactionsVirtualChainGetParamsLimit.
const (
	N10  GetVirtualChainTransactionsVirtualChainGetParamsLimit = 10
	N100 GetVirtualChainTransactionsVirtualChainGetParamsLimit = 100
)

// AddressName defines model for AddressName.
type AddressName struct {
	Address string `json:"address"`
	Name    string `json:"name"`
}

// AddressesActiveRequest defines model for AddressesActiveRequest.
type AddressesActiveRequest struct {
	Addresses *[]string `json:"addresses,omitempty"`
}

// BalanceRequest defines model for BalanceRequest.
type BalanceRequest struct {
	Addresses *[]string `json:"addresses,omitempty"`
}

// BalanceResponse defines model for BalanceResponse.
type BalanceResponse struct {
	Address *string `json:"address,omitempty"`
	Balance *int    `json:"balance,omitempty"`
}

// BalancesByAddressEntry defines model for BalancesByAddressEntry.
type BalancesByAddressEntry struct {
	Address *string `json:"address,omitempty"`
	Balance *int    `json:"balance,omitempty"`
}

// BlockModel defines model for BlockModel.
type BlockModel struct {
	Extra        *ExtraModel                   `json:"extra,omitempty"`
	Header       EndpointsGetBlocksBlockHeader `json:"header"`
	Transactions *[]BlockTxModel               `json:"transactions,omitempty"`
	VerboseData  VerboseDataModel              `json:"verboseData"`
}

// BlockResponse defines model for BlockResponse.
type BlockResponse struct {
	BlockHashes *[]string     `json:"blockHashes,omitempty"`
	Blocks      *[]BlockModel `json:"blocks,omitempty"`
}

// BlockRewardResponse defines model for BlockRewardResponse.
type BlockRewardResponse struct {
	Blockreward *float32 `json:"blockreward,omitempty"`
}

// BlockTxInputModel defines model for BlockTxInputModel.
type BlockTxInputModel struct {
	PreviousOutpoint *BlockTxInputPreviousOutpointModel `json:"previousOutpoint,omitempty"`
	Sequence         *int                               `json:"sequence,omitempty"`
	SigOpCount       *int                               `json:"sigOpCount,omitempty"`
	SignatureScript  *string                            `json:"signatureScript,omitempty"`
}

// BlockTxInputPreviousOutpointModel defines model for BlockTxInputPreviousOutpointModel.
type BlockTxInputPreviousOutpointModel struct {
	Index         int    `json:"index"`
	TransactionId string `json:"transactionId"`
}

// BlockTxModel defines model for BlockTxModel.
type BlockTxModel struct {
	Gas          *int                    `json:"gas,omitempty"`
	Inputs       *[]BlockTxInputModel    `json:"inputs,omitempty"`
	LockTime     *int                    `json:"lockTime,omitempty"`
	Mass         *int                    `json:"mass,omitempty"`
	Outputs      *[]BlockTxOutputModel   `json:"outputs,omitempty"`
	Payload      *string                 `json:"payload,omitempty"`
	SubnetworkId *string                 `json:"subnetworkId,omitempty"`
	VerboseData  BlockTxVerboseDataModel `json:"verboseData"`
	Version      *int                    `json:"version,omitempty"`
}

// BlockTxOutputModel defines model for BlockTxOutputModel.
type BlockTxOutputModel struct {
	Amount          *int                               `json:"amount,omitempty"`
	ScriptPublicKey *BlockTxOutputScriptPublicKeyModel `json:"scriptPublicKey,omitempty"`
	VerboseData     *BlockTxOutputVerboseDataModel     `json:"verboseData,omitempty"`
}

// BlockTxOutputScriptPublicKeyModel defines model for BlockTxOutputScriptPublicKeyModel.
type BlockTxOutputScriptPublicKeyModel struct {
	ScriptPublicKey *string `json:"scriptPublicKey,omitempty"`
	Version         *int    `json:"version,omitempty"`
}

// BlockTxOutputVerboseDataModel defines model for BlockTxOutputVerboseDataModel.
type BlockTxOutputVerboseDataModel struct {
	ScriptPublicKeyAddress *string `json:"scriptPublicKeyAddress,omitempty"`
	ScriptPublicKeyType    *string `json:"scriptPublicKeyType,omitempty"`
}

// BlockTxVerboseDataModel defines model for BlockTxVerboseDataModel.
type BlockTxVerboseDataModel struct {
	BlockHash     *string `json:"blockHash,omitempty"`
	BlockTime     *int    `json:"blockTime,omitempty"`
	ComputeMass   *int    `json:"computeMass,omitempty"`
	Hash          *string `json:"hash,omitempty"`
	TransactionId string  `json:"transactionId"`
}

// CoinSupplyResponse defines model for CoinSupplyResponse.
type CoinSupplyResponse struct {
	CirculatingSupply *string `json:"circulatingSupply,omitempty"`
	MaxSupply         *string `json:"maxSupply,omitempty"`
}

// DBCheckStatus defines model for DBCheckStatus.
type DBCheckStatus struct {
	AcceptedTxBlockTime     *int  `json:"acceptedTxBlockTime,omitempty"`
	AcceptedTxBlockTimeDiff *int  `json:"acceptedTxBlockTimeDiff,omitempty"`
	BlueScore               *int  `json:"blueScore,omitempty"`
	BlueScoreDiff           *int  `json:"blueScoreDiff,omitempty"`
	IsSynced                *bool `json:"isSynced,omitempty"`
}

// ExtraModel defines model for ExtraModel.
type ExtraModel struct {
	Color        *string `json:"color,omitempty"`
	MinerAddress *string `json:"minerAddress,omitempty"`
	MinerInfo    *string `json:"minerInfo,omitempty"`
}

// FeeEstimateBucket defines model for FeeEstimateBucket.
type FeeEstimateBucket struct {
	EstimatedSeconds *float32 `json:"estimatedSeconds,omitempty"`
	Feerate          *int     `json:"feerate,omitempty"`
}

// FeeEstimateResponse defines model for FeeEstimateResponse.
type FeeEstimateResponse struct {
	LowBuckets     []FeeEstimateBucket `json:"lowBuckets"`
	NormalBuckets  []FeeEstimateBucket `json:"normalBuckets"`
	PriorityBucket FeeEstimateBucket   `json:"priorityBucket"`
}

// HTTPValidationError defines model for HTTPValidationError.
type HTTPValidationError struct {
	Detail *[]ValidationError `json:"detail,omitempty"`
}

// HalvingResponse defines model for HalvingResponse.
type HalvingResponse struct {
	NextHalvingAmount    *float32 `json:"nextHalvingAmount,omitempty"`
	NextHalvingDate      *string  `json:"nextHalvingDate,omitempty"`
	NextHalvingTimestamp *int     `json:"nextHalvingTimestamp,omitempty"`
}

// HashrateResponse defines model for HashrateResponse.
type HashrateResponse struct {
	Hashrate *float32 `json:"hashrate,omitempty"`
}

// HealthResponse defines model for HealthResponse.
type HealthResponse struct {
	Database      DBCheckStatus    `json:"database"`
	KaspadServers []KaspadResponse `json:"kaspadServers"`
}

// KaspadInfoResponse defines model for KaspadInfoResponse.
type KaspadInfoResponse struct {
	IsSynced      *bool   `json:"isSynced,omitempty"`
	IsUtxoIndexed *bool   `json:"isUtxoIndexed,omitempty"`
	MempoolSize   *string `json:"mempoolSize,omitempty"`
	P2pIdHashed   *string `json:"p2pIdHashed,omitempty"`
	ServerVersion *string `json:"serverVersion,omitempty"`
}

// KaspadResponse defines model for KaspadResponse.
type KaspadResponse struct {
	BlueScore     *int    `json:"blueScore,omitempty"`
	IsSynced      *bool   `json:"isSynced,omitempty"`
	IsUtxoIndexed *bool   `json:"isUtxoIndexed,omitempty"`
	KaspadHost    *string `json:"kaspadHost,omitempty"`
	P2pId         *string `json:"p2pId,omitempty"`
	ServerVersion *string `json:"serverVersion,omitempty"`
}

// MarketCapResponse defines model for MarketCapResponse.
type MarketCapResponse struct {
	Marketcap *int `json:"marketcap,omitempty"`
}

// MaxHashrateResponse defines model for MaxHashrateResponse.
type MaxHashrateResponse struct {
	Blockheader EndpointsGetHashrateBlockHeader `json:"blockheader"`
	Hashrate    *float32                        `json:"hashrate,omitempty"`
}

// NetworkResponse defines model for NetworkResponse.
type NetworkResponse struct {
	BlockCount          *string   `json:"blockCount,omitempty"`
	Difficulty          *float32  `json:"difficulty,omitempty"`
	HeaderCount         *string   `json:"headerCount,omitempty"`
	NetworkName         *string   `json:"networkName,omitempty"`
	PastMedianTime      *string   `json:"pastMedianTime,omitempty"`
	PruningPointHash    *string   `json:"pruningPointHash,omitempty"`
	TipHashes           *[]string `json:"tipHashes,omitempty"`
	VirtualDaaScore     *string   `json:"virtualDaaScore,omitempty"`
	VirtualParentHashes *[]string `json:"virtualParentHashes,omitempty"`
}

// OutpointModel defines model for OutpointModel.
type OutpointModel struct {
	Index         *int    `json:"index,omitempty"`
	TransactionId *string `json:"transactionId,omitempty"`
}

// ParentHashModel defines model for ParentHashModel.
type ParentHashModel struct {
	ParentHashes *[]string `json:"parentHashes,omitempty"`
}

// PriceResponse defines model for PriceResponse.
type PriceResponse struct {
	Price *float32 `json:"price,omitempty"`
}

// ScriptPublicKeyModel defines model for ScriptPublicKeyModel.
type ScriptPublicKeyModel struct {
	ScriptPublicKey *string `json:"scriptPublicKey,omitempty"`
}

// SubmitTransactionRequest defines model for SubmitTransactionRequest.
type SubmitTransactionRequest struct {
	AllowOrphan *bool         `json:"allowOrphan,omitempty"`
	Transaction SubmitTxModel `json:"transaction"`
}

// SubmitTransactionResponse defines model for SubmitTransactionResponse.
type SubmitTransactionResponse struct {
	Error         *string `json:"error,omitempty"`
	TransactionId *string `json:"transactionId,omitempty"`
}

// SubmitTxInput defines model for SubmitTxInput.
type SubmitTxInput struct {
	PreviousOutpoint SubmitTxOutpoint `json:"previousOutpoint"`
	Sequence         int              `json:"sequence"`
	SigOpCount       int              `json:"sigOpCount"`
	SignatureScript  string           `json:"signatureScript"`
}

// SubmitTxModel defines model for SubmitTxModel.
type SubmitTxModel struct {
	Inputs       []SubmitTxInput  `json:"inputs"`
	LockTime     *int             `json:"lockTime,omitempty"`
	Outputs      []SubmitTxOutput `json:"outputs"`
	SubnetworkId *string          `json:"subnetworkId,omitempty"`
	Version      int              `json:"version"`
}

// SubmitTxOutpoint defines model for SubmitTxOutpoint.
type SubmitTxOutpoint struct {
	Index         int    `json:"index"`
	TransactionId string `json:"transactionId"`
}

// SubmitTxOutput defines model for SubmitTxOutput.
type SubmitTxOutput struct {
	Amount          int                     `json:"amount"`
	ScriptPublicKey SubmitTxScriptPublicKey `json:"scriptPublicKey"`
}

// SubmitTxScriptPublicKey defines model for SubmitTxScriptPublicKey.
type SubmitTxScriptPublicKey struct {
	ScriptPublicKey string `json:"scriptPublicKey"`
	Version         int    `json:"version"`
}

// TransactionCount defines model for TransactionCount.
type TransactionCount struct {
	LimitExceeded bool `json:"limit_exceeded"`
	Total         int  `json:"total"`
}

// TxAcceptanceRequest defines model for TxAcceptanceRequest.
type TxAcceptanceRequest struct {
	TransactionIds *[]string `json:"transactionIds,omitempty"`
}

// TxAcceptanceResponse defines model for TxAcceptanceResponse.
type TxAcceptanceResponse struct {
	Accepted      bool    `json:"accepted"`
	TransactionId *string `json:"transactionId,omitempty"`
}

// TxIdResponse defines model for TxIdResponse.
type TxIdResponse struct {
	Active  bool   `json:"active"`
	Address string `json:"address"`
}

// TxInput defines model for TxInput.
type TxInput struct {
	Index                    int       `json:"index"`
	PreviousOutpointAddress  *string   `json:"previous_outpoint_address,omitempty"`
	PreviousOutpointAmount   *int      `json:"previous_outpoint_amount,omitempty"`
	PreviousOutpointHash     string    `json:"previous_outpoint_hash"`
	PreviousOutpointIndex    string    `json:"previous_outpoint_index"`
	PreviousOutpointResolved *TxOutput `json:"previous_outpoint_resolved,omitempty"`
	SigOpCount               *string   `json:"sig_op_count,omitempty"`
	SignatureScript          *string   `json:"signature_script,omitempty"`
	TransactionId            string    `json:"transaction_id"`
}

// TxMass defines model for TxMass.
type TxMass struct {
	ComputeMass int `json:"compute_mass"`
	Mass        int `json:"mass"`
	StorageMass int `json:"storage_mass"`
}

// TxModel defines model for TxModel.
type TxModel struct {
	AcceptingBlockBlueScore *int        `json:"accepting_block_blue_score,omitempty"`
	AcceptingBlockHash      *string     `json:"accepting_block_hash,omitempty"`
	AcceptingBlockTime      *int        `json:"accepting_block_time,omitempty"`
	BlockHash               *[]string   `json:"block_hash,omitempty"`
	BlockTime               *int        `json:"block_time,omitempty"`
	Hash                    *string     `json:"hash,omitempty"`
	Inputs                  *[]TxInput  `json:"inputs,omitempty"`
	IsAccepted              *bool       `json:"is_accepted,omitempty"`
	Mass                    *string     `json:"mass,omitempty"`
	Outputs                 *[]TxOutput `json:"outputs,omitempty"`
	Payload                 *string     `json:"payload,omitempty"`
	SubnetworkId            *string     `json:"subnetwork_id,omitempty"`
	TransactionId           *string     `json:"transaction_id,omitempty"`
}

// TxOutput defines model for TxOutput.
type TxOutput struct {
	AcceptingBlockHash     *string `json:"accepting_block_hash,omitempty"`
	Amount                 int     `json:"amount"`
	Index                  int     `json:"index"`
	ScriptPublicKey        *string `json:"script_public_key,omitempty"`
	ScriptPublicKeyAddress *string `json:"script_public_key_address,omitempty"`
	ScriptPublicKeyType    *string `json:"script_public_key_type,omitempty"`
	TransactionId          string  `json:"transaction_id"`
}

// TxSearch defines model for TxSearch.
type TxSearch struct {
	AcceptingBlueScores *TxSearchAcceptingBlueScores `json:"acceptingBlueScores,omitempty"`
	TransactionIds      *[]string                    `json:"transactionIds,omitempty"`
}

// TxSearchAcceptingBlueScores defines model for TxSearchAcceptingBlueScores.
type TxSearchAcceptingBlueScores struct {
	Gte int `json:"gte"`
	Lt  int `json:"lt"`
}

// UtxoModel defines model for UtxoModel.
type UtxoModel struct {
	Amount          *string              `json:"amount,omitempty"`
	BlockDaaScore   *string              `json:"blockDaaScore,omitempty"`
	IsCoinbase      *bool                `json:"isCoinbase,omitempty"`
	ScriptPublicKey ScriptPublicKeyModel `json:"scriptPublicKey"`
}

// UtxoRequest defines model for UtxoRequest.
type UtxoRequest struct {
	Addresses *[]string `json:"addresses,omitempty"`
}

// UtxoResponse defines model for UtxoResponse.
type UtxoResponse struct {
	Address   *string       `json:"address,omitempty"`
	Outpoint  OutpointModel `json:"outpoint"`
	UtxoEntry UtxoModel     `json:"utxoEntry"`
}

// ValidationError defines model for ValidationError.
type ValidationError struct {
	Loc  []ValidationError_Loc_Item `json:"loc"`
	Msg  string                     `json:"msg"`
	Type string                     `json:"type"`
}

// ValidationErrorLoc0 defines model for .
type ValidationErrorLoc0 = string

// ValidationErrorLoc1 defines model for .
type ValidationErrorLoc1 = int

// ValidationError_Loc_Item defines model for ValidationError.loc.Item.
type ValidationError_Loc_Item struct {
	union json.RawMessage
}

// VcBlockModel defines model for VcBlockModel.
type VcBlockModel struct {
	BlueScore    int          `json:"blue_score"`
	DaaScore     *int         `json:"daa_score,omitempty"`
	Hash         string       `json:"hash"`
	Timestamp    *int         `json:"timestamp,omitempty"`
	Transactions *[]VcTxModel `json:"transactions,omitempty"`
}

// VcTxInput defines model for VcTxInput.
type VcTxInput struct {
	PreviousOutpointAddress *string `json:"previous_outpoint_address,omitempty"`
	PreviousOutpointAmount  *int    `json:"previous_outpoint_amount,omitempty"`
	PreviousOutpointHash    string  `json:"previous_outpoint_hash"`
	PreviousOutpointIndex   int     `json:"previous_outpoint_index"`
	PreviousOutpointScript  *string `json:"previous_outpoint_script,omitempty"`
}

// VcTxModel defines model for VcTxModel.
type VcTxModel struct {
	Inputs        *[]VcTxInput  `json:"inputs,omitempty"`
	IsAccepted    *bool         `json:"is_accepted,omitempty"`
	Outputs       *[]VcTxOutput `json:"outputs,omitempty"`
	TransactionId string        `json:"transaction_id"`
}

// VcTxOutput defines model for VcTxOutput.
type VcTxOutput struct {
	Amount                 int    `json:"amount"`
	ScriptPublicKey        string `json:"script_public_key"`
	ScriptPublicKeyAddress string `json:"script_public_key_address"`
}

// VerboseDataModel defines model for VerboseDataModel.
type VerboseDataModel struct {
	BlueScore           *string   `json:"blueScore,omitempty"`
	ChildrenHashes      *[]string `json:"childrenHashes,omitempty"`
	Difficulty          *float32  `json:"difficulty,omitempty"`
	Hash                *string   `json:"hash,omitempty"`
	IsChainBlock        *bool     `json:"isChainBlock,omitempty"`
	MergeSetBluesHashes *[]string `json:"mergeSetBluesHashes,omitempty"`
	MergeSetRedsHashes  *[]string `json:"mergeSetRedsHashes,omitempty"`
	SelectedParentHash  *string   `json:"selectedParentHash,omitempty"`
	TransactionIds      *[]string `json:"transactionIds,omitempty"`
}

// EndpointsGetAddressTransactionsPreviousOutpointLookupMode An enumeration.
type EndpointsGetAddressTransactionsPreviousOutpointLookupMode string

// EndpointsGetBlockdagBlockdagResponse defines model for endpoints__get_blockdag__BlockdagResponse.
type EndpointsGetBlockdagBlockdagResponse struct {
	BlockCount          *string   `json:"blockCount,omitempty"`
	Difficulty          *float32  `json:"difficulty,omitempty"`
	HeaderCount         *string   `json:"headerCount,omitempty"`
	NetworkName         *string   `json:"networkName,omitempty"`
	PastMedianTime      *string   `json:"pastMedianTime,omitempty"`
	PruningPointHash    *string   `json:"pruningPointHash,omitempty"`
	TipHashes           *[]string `json:"tipHashes,omitempty"`
	VirtualDaaScore     *string   `json:"virtualDaaScore,omitempty"`
	VirtualParentHashes *[]string `json:"virtualParentHashes,omitempty"`
}

// EndpointsGetBlocksBlockHeader defines model for endpoints__get_blocks__BlockHeader.
type EndpointsGetBlocksBlockHeader struct {
	AcceptedIdMerkleRoot *string            `json:"acceptedIdMerkleRoot,omitempty"`
	Bits                 *int               `json:"bits,omitempty"`
	BlueScore            *string            `json:"blueScore,omitempty"`
	BlueWork             *string            `json:"blueWork,omitempty"`
	DaaScore             *string            `json:"daaScore,omitempty"`
	HashMerkleRoot       *string            `json:"hashMerkleRoot,omitempty"`
	Nonce                *string            `json:"nonce,omitempty"`
	Parents              *[]ParentHashModel `json:"parents,omitempty"`
	PruningPoint         *string            `json:"pruningPoint,omitempty"`
	Timestamp            *string            `json:"timestamp,omitempty"`
	UtxoCommitment       *string            `json:"utxoCommitment,omitempty"`
	Version              *int               `json:"version,omitempty"`
}

// EndpointsGetHashrateBlockHeader defines model for endpoints__get_hashrate__BlockHeader.
type EndpointsGetHashrateBlockHeader struct {
	BlueScore  *string `json:"blueScore,omitempty"`
	DaaScore   *string `json:"daaScore,omitempty"`
	Difficulty *int    `json:"difficulty,omitempty"`
	Hash       *string `json:"hash,omitempty"`
	Timestamp  *string `json:"timestamp,omitempty"`
}

// EndpointsGetTransactionsPreviousOutpointLookupMode An enumeration.
type EndpointsGetTransactionsPreviousOutpointLookupMode string

// EndpointsGetVirtualChainBlueScoreBlockdagResponse defines model for endpoints__get_virtual_chain_blue_score__BlockdagResponse.
type EndpointsGetVirtualChainBlueScoreBlockdagResponse struct {
	BlueScore *int `json:"blueScore,omitempty"`
}

// GetFullTransactionsForAddressAddressesKaspaAddressFullTransactionsGetParams defines parameters for GetFullTransactionsForAddressAddressesKaspaAddressFullTransactionsGet.
type GetFullTransactionsForAddressAddressesKaspaAddressFullTransactionsGetParams struct {
	// Limit The number of records to get
	Limit *int `form:"limit,omitempty" json:"limit,omitempty"`

	// Offset The offset from which to get records
	Offset *int    `form:"offset,omitempty" json:"offset,omitempty"`
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// ResolvePreviousOutpoints Use this parameter if you want to fetch the TransactionInput previous outpoint details. Light fetches only the adress and amount. Full fetches the whole TransactionOutput and adds it into each TxInput.
	ResolvePreviousOutpoints *EndpointsGetAddressTransactionsPreviousOutpointLookupMode `form:"resolve_previous_outpoints,omitempty" json:"resolve_previous_outpoints,omitempty"`
}

// GetFullTransactionsForAddressPageAddressesKaspaAddressFullTransactionsPageGetParams defines parameters for GetFullTransactionsForAddressPageAddressesKaspaAddressFullTransactionsPageGet.
type GetFullTransactionsForAddressPageAddressesKaspaAddressFullTransactionsPageGetParams struct {
	// Limit The max number of records to get. For paging combine with using 'before/after' from oldest previous result. Use value of X-Next-Page-Before/-After as long as header is present to continue paging. The actual number of transactions returned for each page can be > limit.
	Limit *int `form:"limit,omitempty" json:"limit,omitempty"`

	// Before Only include transactions with block time before this (epoch-millis)
	Before *int `form:"before,omitempty" json:"before,omitempty"`

	// After Only include transactions with block time after this (epoch-millis)
	After  *int    `form:"after,omitempty" json:"after,omitempty"`
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// ResolvePreviousOutpoints Use this parameter if you want to fetch the TransactionInput previous outpoint details. Light fetches only the adress and amount. Full fetches the whole TransactionOutput and adds it into each TxInput.
	ResolvePreviousOutpoints *EndpointsGetAddressTransactionsPreviousOutpointLookupMode `form:"resolve_previous_outpoints,omitempty" json:"resolve_previous_outpoints,omitempty"`
}

// GetBlocksBlocksGetParams defines parameters for GetBlocksBlocksGet.
type GetBlocksBlocksGetParams struct {
	LowHash             string `form:"lowHash" json:"lowHash"`
	IncludeBlocks       *bool  `form:"includeBlocks,omitempty" json:"includeBlocks,omitempty"`
	IncludeTransactions *bool  `form:"includeTransactions,omitempty" json:"includeTransactions,omitempty"`
}

// GetBlocksFromBluescoreBlocksFromBluescoreGetParams defines parameters for GetBlocksFromBluescoreBlocksFromBluescoreGet.
type GetBlocksFromBluescoreBlocksFromBluescoreGetParams struct {
	BlueScore           *int  `form:"blueScore,omitempty" json:"blueScore,omitempty"`
	IncludeTransactions *bool `form:"includeTransactions,omitempty" json:"includeTransactions,omitempty"`
}

// GetBlockBlocksBlockIdGetParams defines parameters for GetBlockBlocksBlockIdGet.
type GetBlockBlocksBlockIdGetParams struct {
	IncludeTransactions *bool `form:"includeTransactions,omitempty" json:"includeTransactions,omitempty"`
	IncludeColor        *bool `form:"includeColor,omitempty" json:"includeColor,omitempty"`
}

// GetBlockrewardInfoBlockrewardGetParams defines parameters for GetBlockrewardInfoBlockrewardGet.
type GetBlockrewardInfoBlockrewardGetParams struct {
	StringOnly *bool `form:"stringOnly,omitempty" json:"stringOnly,omitempty"`
}

// GetCirculatingCoinsInfoCoinsupplyCirculatingGetParams defines parameters for GetCirculatingCoinsInfoCoinsupplyCirculatingGet.
type GetCirculatingCoinsInfoCoinsupplyCirculatingGetParams struct {
	InBillion *bool `form:"in_billion,omitempty" json:"in_billion,omitempty"`
}

// GetHalvingInfoHalvingGetParams defines parameters for GetHalvingInfoHalvingGet.
type GetHalvingInfoHalvingGetParams struct {
	Field *string `form:"field,omitempty" json:"field,omitempty"`
}

// GetHashrateInfoHashrateGetParams defines parameters for GetHashrateInfoHashrateGet.
type GetHashrateInfoHashrateGetParams struct {
	StringOnly *bool `form:"stringOnly,omitempty" json:"stringOnly,omitempty"`
}

// GetMarketcapInfoMarketcapGetParams defines parameters for GetMarketcapInfoMarketcapGet.
type GetMarketcapInfoMarketcapGetParams struct {
	StringOnly *bool `form:"stringOnly,omitempty" json:"stringOnly,omitempty"`
}

// GetPriceInfoPriceGetParams defines parameters for GetPriceInfoPriceGet.
type GetPriceInfoPriceGetParams struct {
	StringOnly *bool `form:"stringOnly,omitempty" json:"stringOnly,omitempty"`
}

// SubmitANewTransactionTransactionsPostParams defines parameters for SubmitANewTransactionTransactionsPost.
type SubmitANewTransactionTransactionsPostParams struct {
	// ReplaceByFee Replace an existing transaction in the mempool
	ReplaceByFee *bool `form:"replaceByFee,omitempty" json:"replaceByFee,omitempty"`
}

// SearchForTransactionsTransactionsSearchPostParams defines parameters for SearchForTransactionsTransactionsSearchPost.
type SearchForTransactionsTransactionsSearchPostParams struct {
	Fields *string `form:"fields,omitempty" json:"fields,omitempty"`

	// ResolvePreviousOutpoints Use this parameter if you want to fetch the TransactionInput previous outpoint details. Light fetches only the address and amount. Full fetches the whole TransactionOutput and adds it into each TxInput.
	ResolvePreviousOutpoints *EndpointsGetTransactionsPreviousOutpointLookupMode `form:"resolve_previous_outpoints,omitempty" json:"resolve_previous_outpoints,omitempty"`
}

// GetTransactionTransactionsTransactionIdGetParams defines parameters for GetTransactionTransactionsTransactionIdGet.
type GetTransactionTransactionsTransactionIdGetParams struct {
	// BlockHash Specify a containing block (if known) for faster lookup
	BlockHash *string `form:"blockHash,omitempty" json:"blockHash,omitempty"`
	Inputs    *bool   `form:"inputs,omitempty" json:"inputs,omitempty"`
	Outputs   *bool   `form:"outputs,omitempty" json:"outputs,omitempty"`

	// ResolvePreviousOutpoints Use this parameter if you want to fetch the TransactionInput previous outpoint details. Light fetches only the address and amount. Full fetches the whole TransactionOutput and adds it into each TxInput.
	ResolvePreviousOutpoints *EndpointsGetTransactionsPreviousOutpointLookupMode `form:"resolve_previous_outpoints,omitempty" json:"resolve_previous_outpoints,omitempty"`
}

// GetVirtualChainTransactionsVirtualChainGetParams defines parameters for GetVirtualChainTransactionsVirtualChainGet.
type GetVirtualChainTransactionsVirtualChainGetParams struct {
	// BlueScoreGte Divisible by limit
	BlueScoreGte    int                                                    `form:"blueScoreGte" json:"blueScoreGte"`
	Limit           *GetVirtualChainTransactionsVirtualChainGetParamsLimit `form:"limit,omitempty" json:"limit,omitempty"`
	ResolveInputs   *bool                                                  `form:"resolveInputs,omitempty" json:"resolveInputs,omitempty"`
	IncludeCoinbase *bool                                                  `form:"includeCoinbase,omitempty" json:"includeCoinbase,omitempty"`
}

// GetVirtualChainTransactionsVirtualChainGetParamsLimit defines parameters for GetVirtualChainTransactionsVirtualChainGet.
type GetVirtualChainTransactionsVirtualChainGetParamsLimit int

// GetAddressesActiveAddressesActivePostJSONRequestBody defines body for GetAddressesActiveAddressesActivePost for application/json ContentType.
type GetAddressesActiveAddressesActivePostJSONRequestBody = AddressesActiveRequest

// GetBalancesFromKaspaAddressesAddressesBalancesPostJSONRequestBody defines body for GetBalancesFromKaspaAddressesAddressesBalancesPost for application/json ContentType.
type GetBalancesFromKaspaAddressesAddressesBalancesPostJSONRequestBody = BalanceRequest

// GetUtxosForAddressesAddressesUtxosPostJSONRequestBody defines body for GetUtxosForAddressesAddressesUtxosPost for application/json ContentType.
type GetUtxosForAddressesAddressesUtxosPostJSONRequestBody = UtxoRequest

// SubmitANewTransactionTransactionsPostJSONRequestBody defines body for SubmitANewTransactionTransactionsPost for application/json ContentType.
type SubmitANewTransactionTransactionsPostJSONRequestBody = SubmitTransactionRequest

// GetTransactionAcceptanceTransactionsAcceptancePostJSONRequestBody defines body for GetTransactionAcceptanceTransactionsAcceptancePost for application/json ContentType.
type GetTransactionAcceptanceTransactionsAcceptancePostJSONRequestBody = TxAcceptanceRequest

// CalculateTransactionMassTransactionsMassPostJSONRequestBody defines body for CalculateTransactionMassTransactionsMassPost for application/json ContentType.
type CalculateTransactionMassTransactionsMassPostJSONRequestBody = SubmitTxModel

// SearchForTransactionsTransactionsSearchPostJSONRequestBody defines body for SearchForTransactionsTransactionsSearchPost for application/json ContentType.
type SearchForTransactionsTransactionsSearchPostJSONRequestBody = TxSearch

// AsValidationErrorLoc0 returns the union data inside the ValidationError_Loc_Item as a ValidationErrorLoc0
func (t ValidationError_Loc_Item) AsValidationErrorLoc0() (ValidationErrorLoc0, error) {
	var body ValidationErrorLoc0
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromValidationErrorLoc0 overwrites any union data inside the ValidationError_Loc_Item as the provided ValidationErrorLoc0
func (t *ValidationError_Loc_Item) FromValidationErrorLoc0(v ValidationErrorLoc0) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// Removed `func (t *ValidationError_Loc_Item) MergeValidationErrorLoc0 (v ValidationErrorLoc0) error` (see custom oapi.yaml config)

// AsValidationErrorLoc1 returns the union data inside the ValidationError_Loc_Item as a ValidationErrorLoc1
func (t ValidationError_Loc_Item) AsValidationErrorLoc1() (ValidationErrorLoc1, error) {
	var body ValidationErrorLoc1
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromValidationErrorLoc1 overwrites any union data inside the ValidationError_Loc_Item as the provided ValidationErrorLoc1
func (t *ValidationError_Loc_Item) FromValidationErrorLoc1(v ValidationErrorLoc1) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// Removed `func (t *ValidationError_Loc_Item) MergeValidationErrorLoc1 (v ValidationErrorLoc1) error` (see custom oapi.yaml config)

func (t ValidationError_Loc_Item) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *ValidationError_Loc_Item) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}
